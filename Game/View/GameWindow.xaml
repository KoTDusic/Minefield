<Window x:Class="Game.GameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:game="clr-namespace:Game"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
        xmlns:imagesLibrary="clr-namespace:ImagesLibrary;assembly=ImagesLibrary"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d" WindowState="Maximized"
        Title="Minefield" Height="700" Width="600" WindowStartupLocation="CenterScreen" 
        d:DataContext="{d:DesignInstance  game:GameViewModel}">
    <Window.Resources>
        <DataTemplate x:Key="fieldContentTemplate" DataType="game:MapField" x:Shared="False">
            <ContentControl Name="mineContent"/>
            
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static game:FieldType.Number}">
                    <Setter TargetName="mineContent" Property="Content">
                        <Setter.Value>
                            <TextBlock Text="{Binding Number}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                       FontSize="20" FontFamily="Arial" FontWeight="Bold"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static game:FieldType.Mine}">
                    <Setter TargetName="mineContent" Property="Content">
                        <Setter.Value>
                            <Image Source="{Binding Source={x:Static imagesLibrary:Images.MineImage}}"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
            <DataTemplate x:Key="fieldTemplate" DataType="game:MapField">
            <Border Name="field">
                <ContentControl Name="fieldContent" Content="{Binding}" Visibility="Collapsed"
                                ContentTemplate="{StaticResource fieldContentTemplate}" />
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction 
                            Command="{Binding RelativeSource={RelativeSource FindAncestor,
                            AncestorType=game:GameWindow}, Path=DataContext.OpenFieldCommand}" 
                            CommandParameter="{Binding}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:InvokeCommandAction 
                            Command="{Binding RelativeSource={RelativeSource FindAncestor,
                            AncestorType=game:GameWindow}, Path=DataContext.ChangeFocusCommand}" 
                            CommandParameter="{Binding}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="MinHeight" Value="20" />
                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
                        <Setter Property="Background" Value="LightGray" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Style.Triggers>
                            <!--<DataTrigger Binding="{Binding Type}" Value="{x:Static game:FieldType.Mine}">
                                <Setter Property="Background" Value="Red"/>
                            </DataTrigger>-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Aquamarine"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsOpen}" Value="true">
                    <Setter TargetName="fieldContent" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <MultiDataTrigger>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>
    <Grid IsHitTestVisible="{Binding Initialized}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Background="SteelBlue">
            <Grid TextBlock.FontSize="20" TextBlock.FontFamily="Arial" TextBlock.Foreground="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Margin="5" >
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Поле:{0}х{1}">
                            <MultiBinding.Bindings>
                                <Binding Path="FieldHeight"/>
                                <Binding Path="FieldWidth"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text="{Binding AllMines, StringFormat=Число мин:{0}}" Grid.Column="1" Margin="5"/>
                <TextBlock Grid.Column="2" Margin="5" >
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Выбранный элемент: ({0},{1})" 
                                      FallbackValue="{x:Static system:String.Empty}">
                            <MultiBinding.Bindings>
                                <Binding Path="FocusedField.X"/>
                                <Binding Path="FocusedField.Y"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </Border>
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible">
            <ItemsControl ItemsSource="{Binding Rows}" VerticalAlignment="Stretch" HorizontalAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding Path=ClearFocusCommand}"/>
                </i:EventTrigger>
                </i:Interaction.Triggers>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="game:FieldRow">
                        <ItemsControl ItemsSource="{Binding Items}" HorizontalAlignment="Center"
                                      ItemTemplate="{StaticResource fieldTemplate}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <Border Grid.Row="0" Grid.RowSpan="2" Background="White" Opacity="0.7" 
                Visibility="{Binding Initialized, Converter={StaticResource BooleanToVisibilityConverter},
            ConverterParameter=Inverted}">
            <Image Width="256" Height="256"
                   VerticalAlignment="Center" HorizontalAlignment="Center" 
                   gif:AnimationBehavior.SourceUri="{x:Static imagesLibrary:Images.LoaderImage}" />
        </Border>
    </Grid>
    

</Window>
